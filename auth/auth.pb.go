// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	SshCertificateRequest
	SshCertificate
	NewCredentialRequest
	UserAction
	NewCredentialResponse
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SshCertificateRequest struct {
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
}

func (m *SshCertificateRequest) Reset()                    { *m = SshCertificateRequest{} }
func (m *SshCertificateRequest) String() string            { return proto.CompactTextString(m) }
func (*SshCertificateRequest) ProtoMessage()               {}
func (*SshCertificateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SshCertificateRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type SshCertificate struct {
	Certificate string `protobuf:"bytes,1,opt,name=certificate" json:"certificate,omitempty"`
}

func (m *SshCertificate) Reset()                    { *m = SshCertificate{} }
func (m *SshCertificate) String() string            { return proto.CompactTextString(m) }
func (*SshCertificate) ProtoMessage()               {}
func (*SshCertificate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SshCertificate) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type NewCredentialRequest struct {
	// Request for a short-lived SSH certificate
	SshCertificateRequest *SshCertificateRequest `protobuf:"bytes,1,opt,name=ssh_certificate_request,json=sshCertificateRequest" json:"ssh_certificate_request,omitempty"`
}

func (m *NewCredentialRequest) Reset()                    { *m = NewCredentialRequest{} }
func (m *NewCredentialRequest) String() string            { return proto.CompactTextString(m) }
func (*NewCredentialRequest) ProtoMessage()               {}
func (*NewCredentialRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NewCredentialRequest) GetSshCertificateRequest() *SshCertificateRequest {
	if m != nil {
		return m.SshCertificateRequest
	}
	return nil
}

type UserAction struct {
	// Interactive URL needs to be visited and acted on
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *UserAction) Reset()                    { *m = UserAction{} }
func (m *UserAction) String() string            { return proto.CompactTextString(m) }
func (*UserAction) ProtoMessage()               {}
func (*UserAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserAction) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type NewCredentialResponse struct {
	// If set, the user needs to do something
	ActionRequired *UserAction     `protobuf:"bytes,1,opt,name=action_required,json=actionRequired" json:"action_required,omitempty"`
	SshCertificate *SshCertificate `protobuf:"bytes,2,opt,name=ssh_certificate,json=sshCertificate" json:"ssh_certificate,omitempty"`
}

func (m *NewCredentialResponse) Reset()                    { *m = NewCredentialResponse{} }
func (m *NewCredentialResponse) String() string            { return proto.CompactTextString(m) }
func (*NewCredentialResponse) ProtoMessage()               {}
func (*NewCredentialResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *NewCredentialResponse) GetActionRequired() *UserAction {
	if m != nil {
		return m.ActionRequired
	}
	return nil
}

func (m *NewCredentialResponse) GetSshCertificate() *SshCertificate {
	if m != nil {
		return m.SshCertificate
	}
	return nil
}

func init() {
	proto.RegisterType((*SshCertificateRequest)(nil), "auth.SshCertificateRequest")
	proto.RegisterType((*SshCertificate)(nil), "auth.SshCertificate")
	proto.RegisterType((*NewCredentialRequest)(nil), "auth.NewCredentialRequest")
	proto.RegisterType((*UserAction)(nil), "auth.UserAction")
	proto.RegisterType((*NewCredentialResponse)(nil), "auth.NewCredentialResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AuthenticationService service

type AuthenticationServiceClient interface {
	RequestCredential(ctx context.Context, in *NewCredentialRequest, opts ...grpc.CallOption) (AuthenticationService_RequestCredentialClient, error)
}

type authenticationServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationServiceClient(cc *grpc.ClientConn) AuthenticationServiceClient {
	return &authenticationServiceClient{cc}
}

func (c *authenticationServiceClient) RequestCredential(ctx context.Context, in *NewCredentialRequest, opts ...grpc.CallOption) (AuthenticationService_RequestCredentialClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AuthenticationService_serviceDesc.Streams[0], c.cc, "/auth.AuthenticationService/RequestCredential", opts...)
	if err != nil {
		return nil, err
	}
	x := &authenticationServiceRequestCredentialClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AuthenticationService_RequestCredentialClient interface {
	Recv() (*NewCredentialResponse, error)
	grpc.ClientStream
}

type authenticationServiceRequestCredentialClient struct {
	grpc.ClientStream
}

func (x *authenticationServiceRequestCredentialClient) Recv() (*NewCredentialResponse, error) {
	m := new(NewCredentialResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AuthenticationService service

type AuthenticationServiceServer interface {
	RequestCredential(*NewCredentialRequest, AuthenticationService_RequestCredentialServer) error
}

func RegisterAuthenticationServiceServer(s *grpc.Server, srv AuthenticationServiceServer) {
	s.RegisterService(&_AuthenticationService_serviceDesc, srv)
}

func _AuthenticationService_RequestCredential_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NewCredentialRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuthenticationServiceServer).RequestCredential(m, &authenticationServiceRequestCredentialServer{stream})
}

type AuthenticationService_RequestCredentialServer interface {
	Send(*NewCredentialResponse) error
	grpc.ServerStream
}

type authenticationServiceRequestCredentialServer struct {
	grpc.ServerStream
}

func (x *authenticationServiceRequestCredentialServer) Send(m *NewCredentialResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _AuthenticationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthenticationService",
	HandlerType: (*AuthenticationServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RequestCredential",
			Handler:       _AuthenticationService_RequestCredential_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0xad, 0x8a, 0xb0, 0x3b, 0xe8, 0x66, 0x58, 0x71, 0x6c, 0x28, 0x23, 0x4f, 0x3e, 0x0d,
	0xa9, 0x20, 0xf8, 0xe0, 0xc3, 0xd8, 0xa3, 0x20, 0xd2, 0xe2, 0x73, 0xc9, 0xb2, 0x2b, 0x0d, 0x2b,
	0x6d, 0xcd, 0x1f, 0x65, 0x1f, 0xc3, 0x6f, 0x2c, 0x4d, 0x22, 0xdd, 0x46, 0xde, 0x6e, 0xee, 0xbd,
	0xe7, 0xe4, 0x77, 0x42, 0x00, 0x98, 0xd1, 0xe5, 0xb2, 0x95, 0x8d, 0x6e, 0xc8, 0x65, 0x57, 0xd3,
	0x27, 0x48, 0x72, 0x55, 0xae, 0x51, 0x6a, 0xf1, 0x29, 0x38, 0xd3, 0x98, 0xe1, 0x97, 0x41, 0xa5,
	0xc9, 0x2d, 0x40, 0x6b, 0x36, 0x95, 0xe0, 0xc5, 0x0e, 0xf7, 0xd3, 0x68, 0x11, 0xdd, 0x0f, 0xb2,
	0x81, 0xeb, 0xbc, 0xe2, 0x9e, 0xa6, 0x10, 0x1f, 0xeb, 0xc8, 0x02, 0x86, 0xbc, 0x3f, 0x7a, 0xc5,
	0x61, 0x8b, 0xee, 0x60, 0xf2, 0x86, 0x3f, 0x6b, 0x89, 0x5b, 0xac, 0xb5, 0x60, 0xd5, 0xff, 0x55,
	0x39, 0xdc, 0x28, 0x55, 0x16, 0x07, 0xab, 0x85, 0x74, 0x23, 0xeb, 0x32, 0x4c, 0xe7, 0x4b, 0xcb,
	0x1d, 0x04, 0xcd, 0x12, 0x15, 0x6a, 0xd3, 0x3b, 0x80, 0x0f, 0x85, 0x72, 0xc5, 0xb5, 0x68, 0x6a,
	0x32, 0x86, 0x0b, 0x23, 0x2b, 0x0f, 0xd5, 0x95, 0xf4, 0x37, 0x82, 0xe4, 0x84, 0x46, 0xb5, 0x4d,
	0xad, 0x90, 0x3c, 0xc3, 0x88, 0x59, 0x95, 0xa5, 0x10, 0x12, 0xb7, 0x1e, 0x63, 0xec, 0x30, 0x7a,
	0xdb, 0x2c, 0x76, 0x8b, 0x99, 0xdf, 0x23, 0x2f, 0x30, 0x3a, 0x49, 0x32, 0x3d, 0xb7, 0xd2, 0x49,
	0x30, 0x41, 0x7c, 0x8c, 0x9e, 0x0a, 0x48, 0x56, 0x46, 0x97, 0x1d, 0x0f, 0x67, 0x9d, 0x71, 0x8e,
	0xf2, 0x5b, 0x70, 0x24, 0xef, 0x70, 0xed, 0x73, 0xf5, 0xbc, 0x64, 0xe6, 0x3c, 0x43, 0x4f, 0x3a,
	0x9b, 0x07, 0x67, 0x2e, 0x20, 0x3d, 0x7b, 0x88, 0x36, 0x57, 0xf6, 0x13, 0x3c, 0xfe, 0x05, 0x00,
	0x00, 0xff, 0xff, 0xb4, 0xdb, 0xbc, 0x22, 0x12, 0x02, 0x00, 0x00,
}
