syntax = "proto3";

package auth;

service AuthenticationService {
  rpc RequestUserCredential (UserCredentialRequest) returns (stream CredentialResponse) {}
}

message SshCertificateRequest {
  string public_key = 1;
}

message SshCertificate {
  string certificate = 1;
}

message ClientValidation {
  // To make it harder to simply send a URL to another user and lure them into
  // logging in with the goal of stealing their session, we do a validation
  // by querying localhost:1215. If we get back the value presented in this
  // field the request is considered to be genuine.
  string ident = 1;
}

message VaultTokenRequest {

}

message VaultToken {
  string token = 1;
}

message KubernetesCertificateRequest {
  // TODO(bluecmd): Unused due to https://github.com/hashicorp/vault/issues/4562
  string csr = 1;
}

message KubernetesCertificate {
  string certificate = 1;
  // TODO(bluecmd): Remove when https://github.com/hashicorp/vault/issues/4562 is fixed
  string private_key = 2;
}

message BrowserCookieRequest {
}

message UserCredentialRequest {
  ClientValidation client_validation = 1;

  SshCertificateRequest ssh_certificate_request = 2;

  VaultTokenRequest vault_token_request = 3;

  KubernetesCertificateRequest kubernetes_certificate_request = 4;

  BrowserCookieRequest browser_cookie_request = 5;
}

message UserAction {
  // Interactive URL needs to be visited and acted on
  string url = 1;
}

message CredentialResponse {
  // If set, the user needs to do something
  UserAction required_action = 1;

  SshCertificate ssh_certificate = 2;

  VaultToken vault_token = 3;

  KubernetesCertificate kubernetes_certificate = 4;
}
