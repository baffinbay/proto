syntax = "proto3";

package auth;

service AuthenticationService {
  rpc RequestUserCredential (UserCredentialRequest) returns (stream CredentialResponse) {}
}

message SshCertificateRequest {
  string public_key = 1;
}

message SshCertificate {
  string certificate = 1;
}

message ClientValidation {
  // To make it harder to simply send a URL to another user and lure them into
  // logging in with the goal of stealing their session, we do a validation
  // by querying localhost:1215. If we get back the value presented in this
  // field the request is considered to be genuine.
  string ident = 1;
}

message UserCredentialRequest {
  // Identification to verify on the requester
  ClientValidation client_validation = 1;

  // Request for a short-lived SSH certificate
  SshCertificateRequest ssh_certificate_request = 2;
}

message UserAction {
  // Interactive URL needs to be visited and acted on
  string url = 1;
}

message CredentialResponse {
  // If set, the user needs to do something
  UserAction required_action = 1;

  SshCertificate ssh_certificate = 2;
}
