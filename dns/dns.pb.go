// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package dns

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	// Domain name to insert (FQDN, terminated with .)
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Time-to-live in seconds
	Ttl uint32 `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Class ("IN" most likely)
	Class string `protobuf:"bytes,3,opt,name=class,proto3" json:"class,omitempty"`
	// Type (any case, e.g. "A", "AAAA", etc.)
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Data of the record
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Record) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Record) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *Record) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Record) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type InsertRequest struct {
	Record               []*Record `protobuf:"bytes,1,rep,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsertRequest) Reset()         { *m = InsertRequest{} }
func (m *InsertRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRequest) ProtoMessage()    {}
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{1}
}

func (m *InsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRequest.Unmarshal(m, b)
}
func (m *InsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRequest.Marshal(b, m, deterministic)
}
func (m *InsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRequest.Merge(m, src)
}
func (m *InsertRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRequest.Size(m)
}
func (m *InsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRequest proto.InternalMessageInfo

func (m *InsertRequest) GetRecord() []*Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type RemoveRequest struct {
	Record               []*Record `protobuf:"bytes,1,rep,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{2}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetRecord() []*Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type InsertResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertResponse) Reset()         { *m = InsertResponse{} }
func (m *InsertResponse) String() string { return proto.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()    {}
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{3}
}

func (m *InsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResponse.Unmarshal(m, b)
}
func (m *InsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResponse.Marshal(b, m, deterministic)
}
func (m *InsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResponse.Merge(m, src)
}
func (m *InsertResponse) XXX_Size() int {
	return xxx_messageInfo_InsertResponse.Size(m)
}
func (m *InsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResponse proto.InternalMessageInfo

type RemoveResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{4}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

type GetZoneRequest struct {
	Zone                 string   `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetZoneRequest) Reset()         { *m = GetZoneRequest{} }
func (m *GetZoneRequest) String() string { return proto.CompactTextString(m) }
func (*GetZoneRequest) ProtoMessage()    {}
func (*GetZoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{5}
}

func (m *GetZoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetZoneRequest.Unmarshal(m, b)
}
func (m *GetZoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetZoneRequest.Marshal(b, m, deterministic)
}
func (m *GetZoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetZoneRequest.Merge(m, src)
}
func (m *GetZoneRequest) XXX_Size() int {
	return xxx_messageInfo_GetZoneRequest.Size(m)
}
func (m *GetZoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetZoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetZoneRequest proto.InternalMessageInfo

func (m *GetZoneRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type GetZoneResponse struct {
	Record               []*Record `protobuf:"bytes,1,rep,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetZoneResponse) Reset()         { *m = GetZoneResponse{} }
func (m *GetZoneResponse) String() string { return proto.CompactTextString(m) }
func (*GetZoneResponse) ProtoMessage()    {}
func (*GetZoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_638ff8d8aaf3d8ae, []int{6}
}

func (m *GetZoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetZoneResponse.Unmarshal(m, b)
}
func (m *GetZoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetZoneResponse.Marshal(b, m, deterministic)
}
func (m *GetZoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetZoneResponse.Merge(m, src)
}
func (m *GetZoneResponse) XXX_Size() int {
	return xxx_messageInfo_GetZoneResponse.Size(m)
}
func (m *GetZoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetZoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetZoneResponse proto.InternalMessageInfo

func (m *GetZoneResponse) GetRecord() []*Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "dns.Record")
	proto.RegisterType((*InsertRequest)(nil), "dns.InsertRequest")
	proto.RegisterType((*RemoveRequest)(nil), "dns.RemoveRequest")
	proto.RegisterType((*InsertResponse)(nil), "dns.InsertResponse")
	proto.RegisterType((*RemoveResponse)(nil), "dns.RemoveResponse")
	proto.RegisterType((*GetZoneRequest)(nil), "dns.GetZoneRequest")
	proto.RegisterType((*GetZoneResponse)(nil), "dns.GetZoneResponse")
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor_638ff8d8aaf3d8ae) }

var fileDescriptor_638ff8d8aaf3d8ae = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x1b, 0xd2, 0x06, 0xf5, 0xaa, 0x96, 0x72, 0x54, 0xc8, 0xea, 0x14, 0x05, 0x86, 0x4c,
	0x1d, 0x5a, 0xd4, 0x27, 0xa8, 0x84, 0x58, 0xcd, 0xc6, 0x16, 0x92, 0x1b, 0x22, 0x35, 0x76, 0xb0,
	0x4d, 0xa5, 0xf2, 0x5e, 0xbc, 0x1f, 0xf2, 0x9f, 0x54, 0x32, 0x13, 0x6c, 0xe7, 0x5f, 0xee, 0x73,
	0xbe, 0x3b, 0x19, 0xa6, 0x8d, 0xd0, 0x9b, 0x5e, 0x49, 0x23, 0x31, 0x6d, 0x84, 0x2e, 0x7a, 0xc8,
	0x38, 0xd5, 0x52, 0x35, 0x78, 0x0f, 0x59, 0x23, 0xbb, 0xaa, 0x15, 0x2c, 0xc9, 0x93, 0x72, 0xca,
	0xc3, 0x09, 0x97, 0x90, 0x1a, 0x73, 0x64, 0x57, 0x79, 0x52, 0xce, 0xb9, 0x2d, 0x71, 0x05, 0x93,
	0xfa, 0x58, 0x69, 0xcd, 0x52, 0xd7, 0xe8, 0x0f, 0x88, 0x30, 0x36, 0xe7, 0x9e, 0xd8, 0xd8, 0x85,
	0xae, 0xb6, 0x59, 0x53, 0x99, 0x8a, 0x4d, 0x7c, 0x66, 0xeb, 0xe2, 0x09, 0xe6, 0x2f, 0x42, 0x93,
	0x32, 0x9c, 0x3e, 0x3e, 0x49, 0x1b, 0x7c, 0x80, 0x4c, 0x39, 0x05, 0x96, 0xe4, 0x69, 0x39, 0xdb,
	0xce, 0x36, 0xd6, 0xd1, 0x5b, 0xf1, 0xf0, 0xc9, 0x52, 0x9c, 0x3a, 0x79, 0xa2, 0x7f, 0x51, 0x4b,
	0x58, 0x0c, 0xff, 0xd2, 0xbd, 0x14, 0x9a, 0x6c, 0x32, 0xdc, 0x13, 0x92, 0x47, 0x58, 0x3c, 0x93,
	0x79, 0x93, 0xe2, 0x72, 0x35, 0xc2, 0xf8, 0x4b, 0x0a, 0x0a, 0x7b, 0x70, 0x75, 0xb1, 0x87, 0x9b,
	0x4b, 0x97, 0x07, 0xff, 0x64, 0xb0, 0xfd, 0x4e, 0xe0, 0xf6, 0x70, 0x16, 0x55, 0xd7, 0xd6, 0x07,
	0xa1, 0x5f, 0x49, 0x9d, 0xda, 0x9a, 0x70, 0x07, 0x99, 0xf7, 0x42, 0x74, 0x50, 0xb4, 0x90, 0xf5,
	0x5d, 0x94, 0x05, 0xcd, 0x91, 0x85, 0xbc, 0x7a, 0x80, 0xa2, 0x7d, 0x04, 0xe8, 0xd7, 0x6c, 0x23,
	0xdc, 0xc3, 0x75, 0xf0, 0x46, 0xdf, 0x11, 0xcf, 0xba, 0x5e, 0xc5, 0xe1, 0xc0, 0xbd, 0x67, 0xee,
	0x8d, 0xec, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x72, 0xd4, 0x0c, 0x1d, 0x30, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DynamicDnsServiceClient is the client API for DynamicDnsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DynamicDnsServiceClient interface {
	Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	GetZone(ctx context.Context, in *GetZoneRequest, opts ...grpc.CallOption) (*GetZoneResponse, error)
}

type dynamicDnsServiceClient struct {
	cc *grpc.ClientConn
}

func NewDynamicDnsServiceClient(cc *grpc.ClientConn) DynamicDnsServiceClient {
	return &dynamicDnsServiceClient{cc}
}

func (c *dynamicDnsServiceClient) Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := c.cc.Invoke(ctx, "/dns.DynamicDnsService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicDnsServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/dns.DynamicDnsService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicDnsServiceClient) GetZone(ctx context.Context, in *GetZoneRequest, opts ...grpc.CallOption) (*GetZoneResponse, error) {
	out := new(GetZoneResponse)
	err := c.cc.Invoke(ctx, "/dns.DynamicDnsService/GetZone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynamicDnsServiceServer is the server API for DynamicDnsService service.
type DynamicDnsServiceServer interface {
	Insert(context.Context, *InsertRequest) (*InsertResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	GetZone(context.Context, *GetZoneRequest) (*GetZoneResponse, error)
}

func RegisterDynamicDnsServiceServer(s *grpc.Server, srv DynamicDnsServiceServer) {
	s.RegisterService(&_DynamicDnsService_serviceDesc, srv)
}

func _DynamicDnsService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicDnsServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DynamicDnsService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicDnsServiceServer).Insert(ctx, req.(*InsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicDnsService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicDnsServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DynamicDnsService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicDnsServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicDnsService_GetZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicDnsServiceServer).GetZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.DynamicDnsService/GetZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicDnsServiceServer).GetZone(ctx, req.(*GetZoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DynamicDnsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dns.DynamicDnsService",
	HandlerType: (*DynamicDnsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _DynamicDnsService_Insert_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _DynamicDnsService_Remove_Handler,
		},
		{
			MethodName: "GetZone",
			Handler:    _DynamicDnsService_GetZone_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dns.proto",
}
