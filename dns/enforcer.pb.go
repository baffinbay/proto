// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enforcer.proto

package dns

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RefreshRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshRequest) Reset()         { *m = RefreshRequest{} }
func (m *RefreshRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshRequest) ProtoMessage()    {}
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fc1d510d6ea6cd0, []int{0}
}

func (m *RefreshRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshRequest.Unmarshal(m, b)
}
func (m *RefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshRequest.Marshal(b, m, deterministic)
}
func (m *RefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshRequest.Merge(m, src)
}
func (m *RefreshRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshRequest.Size(m)
}
func (m *RefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshRequest proto.InternalMessageInfo

type RefreshResponse struct {
	// Which version of ipplan that was used
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// How many records were added
	Added uint32 `protobuf:"varint,2,opt,name=added,proto3" json:"added,omitempty"`
	// How many records were removed
	Removed              uint32   `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fc1d510d6ea6cd0, []int{1}
}

func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (m *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(m, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

func (m *RefreshResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RefreshResponse) GetAdded() uint32 {
	if m != nil {
		return m.Added
	}
	return 0
}

func (m *RefreshResponse) GetRemoved() uint32 {
	if m != nil {
		return m.Removed
	}
	return 0
}

func init() {
	proto.RegisterType((*RefreshRequest)(nil), "dns.RefreshRequest")
	proto.RegisterType((*RefreshResponse)(nil), "dns.RefreshResponse")
}

func init() { proto.RegisterFile("enforcer.proto", fileDescriptor_4fc1d510d6ea6cd0) }

var fileDescriptor_4fc1d510d6ea6cd0 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcd, 0x4b, 0xcb,
	0x2f, 0x4a, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0xc9, 0x2b, 0x56,
	0x12, 0xe0, 0xe2, 0x0b, 0x4a, 0x4d, 0x2b, 0x4a, 0x2d, 0xce, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x51, 0x8a, 0xe6, 0xe2, 0x87, 0x8b, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x70,
	0xb1, 0x97, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1,
	0xb8, 0x42, 0x22, 0x5c, 0xac, 0x89, 0x29, 0x29, 0xa9, 0x29, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xbc,
	0x41, 0x10, 0x0e, 0x48, 0x7d, 0x51, 0x6a, 0x6e, 0x7e, 0x59, 0x6a, 0x8a, 0x04, 0x33, 0x58, 0x1c,
	0xc6, 0x35, 0xf2, 0xe4, 0xe2, 0x77, 0x85, 0xba, 0x22, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55,
	0xc8, 0x8c, 0x8b, 0x1d, 0x6a, 0x9f, 0x90, 0xb0, 0x5e, 0x4a, 0x5e, 0xb1, 0x1e, 0xaa, 0x7b, 0xa4,
	0x44, 0x50, 0x05, 0x21, 0x4e, 0x52, 0x62, 0x48, 0x62, 0x03, 0xfb, 0xc2, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x4c, 0x73, 0x30, 0x00, 0xd7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EnforcerServiceClient is the client API for EnforcerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnforcerServiceClient interface {
	Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error)
}

type enforcerServiceClient struct {
	cc *grpc.ClientConn
}

func NewEnforcerServiceClient(cc *grpc.ClientConn) EnforcerServiceClient {
	return &enforcerServiceClient{cc}
}

func (c *enforcerServiceClient) Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/dns.EnforcerService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnforcerServiceServer is the server API for EnforcerService service.
type EnforcerServiceServer interface {
	Refresh(context.Context, *RefreshRequest) (*RefreshResponse, error)
}

func RegisterEnforcerServiceServer(s *grpc.Server, srv EnforcerServiceServer) {
	s.RegisterService(&_EnforcerService_serviceDesc, srv)
}

func _EnforcerService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnforcerServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns.EnforcerService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnforcerServiceServer).Refresh(ctx, req.(*RefreshRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EnforcerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dns.EnforcerService",
	HandlerType: (*EnforcerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Refresh",
			Handler:    _EnforcerService_Refresh_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "enforcer.proto",
}
